/*
题意：有六种管子 , 其中1、2可以互相转换 ， 3、4、5、6可以互相转换  ， 然后给你两行管道 ， 每行有 n 列问水能不能从左上角（第1行第1列）流到右下角（第2行第n列）

思路：模拟即可。判断是否从row==2行流出。是，则判断流出的水是不是水平的。否则，直接NO。【注意：后面四种的形状只能上下两个都是才能往前走】
*/
#include<bits/stdc++.h>

using namespace std;

int main(){
    int _;
    cin>>_;
    while(_--){
        int n;
        cin>>n;
        string s1,s2;
        cin>>s1>>s2;
        int mp[5][n+10];
        int row=1;
        int flag=1;
        for(int i=0;i<n;i++){
            if(!flag){
                break;
            }
            if(i==0){
                if(s1[i]=='1'||s1[i]=='2'){
                    mp[row][i]=1;
                }else{
                    mp[row][i]=4;
                    row=2;
                    if(s2[i]=='1'||s2[i]=='2'){
                        flag=0;
                        break;
                    }else{
                        mp[row][i]=6;
                    }
                }
                continue;
            }
            if(row==1){
                if(s1[i]=='1'||s1[i]=='2'){
                    mp[row][i]=2;
                    continue;
                }else{
                    mp[row][i]=4;
                    row=2;
                    if(s2[i]=='1'||s2[i]=='2'){
                        flag=0;
                        break;
                    }else{
                        mp[row][i]=6;
                    }
                }
            }else{
                if(s2[i]=='1'||s2[i]=='2'){
                    mp[row][i]=2;
                    continue;
                }else{
                    mp[row][i]=5;
                    row=1;
                    if(s1[i]=='1'||s1[i]=='2'){
                        flag=0;
                        break;
                    }else{
                        mp[row][i]=3;
                    }
                }
            }
        }
        if(!flag||row==1){
            printf("NO\n");
            continue;
        }
        if(mp[2][n-1]==2||mp[2][n-1]==6){
            printf("YES\n");
        }else{
            printf("NO\n");
        }
    }
    return 0;
}



/*
6
7
2323216
1615124
1
3
4
2
13
24
2
12
34
3
536
345
2
46
54

*/