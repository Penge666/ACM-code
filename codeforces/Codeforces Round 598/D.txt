/*

从左到右每个0依次和当前最左边的1交换，消耗这两个数下标之差的交换次数。

如果次数不够用，就让这个0和最远的能交换的1交换位置。

直接模拟就行。

*/

#include<bits/stdc++.h>
using namespace std;
#define int long long
signed main(){
    int _;
    cin>>_;
    while(_--){
        int left=0;
        int n,m;cin>>n>>m;string str;cin>>str;
        for(int i=0;i<str.size();i++){
            if(str[i]=='1'){
                left=i;
                break;
            }
        }
        for(int i=0;i<str.size();i++){
            if(str[i]=='0'&&i!=0){
                while(str[left]!='1'&&left<str.size())
                    left++;
                if(left<i){


                if(m>=(i-left)){
                    m-=(i-left);
                    str[left]='0';
                    str[i]='1';
                }else{
                    str[i-m]='0';
                    str[i]='1';
                    m=0;
                }
                if(m<=0){
                    break;
                }
                }
            }
        }
        cout<<str<<endl;
    }
    return 0;
}
//写法二：用vector记录0的位置，然后模拟


#include<bits/stdc++.h>

using namespace std;
#define int unsigned long long
#define N 1000500
int vis[N];
vector<int> v;
signed main(){
    int _;
    cin>>_;
    while(_--){
        int n,m;
        cin>>n>>m;string str;
        v.clear();cin>>str;
        int left=0;
        int sum0=0;int sum1=0;
        for(int i=0;i<str.size();i++){
            if(str[i]=='0'){
                if(m>=(i-left)){
                    m-=(i-left);
                    sum0++;
                    left++;
                }else{

                    if(m){
                    v.push_back(i-m);m=0;
                    }else{
                        v.push_back(i);
                    }
                }
            }else{
                sum1++;
            }
        }
        int len=v.size();
        for(int i=0;i<sum0;i++){
            cout<<"0";
        }int cnt=0;
        for(int i=sum0;i<n;i++){
            if(cnt<len){
                if(v[cnt]==i){
                cout<<"0";
                cnt++;
                }else{
                    cout<<"1";
                }
            }else{
                cout<<"1";
            }
        }
        printf("\n");

    }
    return 0;
}

/*
11011010
01111010
*/
