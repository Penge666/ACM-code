/*
 思路：贪心+模拟【判断应该加自己和移除对手的值哪一个大。优先队列维护最大值】


*/

#include<bits/stdc++.h>
using namespace std;
#define int long long
#define N 10050005
priority_queue <int,vector<int>,less<int> >q1;
priority_queue <int,vector<int>,less<int> >q2;
int a[N];
int b[N];
signed main(){
    int n;cin>>n;
    for(int i=1;i<=n;i++){
        cin>>a[i];
        q1.push(a[i]);
    }
    for(int i=1;i<=n;i++){
        cin>>b[i];
        q2.push(b[i]);
    }
    int suma=0,sumb=0;
    int now=0;
    while(1){
        now++;
        if(q1.empty()&&q2.empty()){
            break;
        }
        int t1=0,t2=0;
        if(now%2){//A
            if(!q1.empty()&&!q2.empty()){
                t1=q1.top();
                t2=q2.top();
                if(t1>t2){
                    q1.pop();
                    suma+=t1;
                }else{
                    q2.pop();
                }
            }else if(q1.empty()&&!q2.empty()){
                q2.pop();
            }else if(!q1.empty()&&q2.empty()){
                suma+=q1.top();
                q1.pop();

            }

        }else{
            if(!q1.empty()&&!q2.empty()){
                t1=q1.top();
                t2=q2.top();
                if(t2>t1){
                    q2.pop();
                    sumb+=t2;
                }else{
                    q1.pop();
                }
            }else if(q1.empty()&&!q2.empty()){
                sumb+=q2.top();
                q2.pop();
            }else if(!q1.empty()&&q2.empty()){
                q1.pop();
            }

        }
    }
    //cout<<suma<<" "<<sumb<<'\n';
    cout<<suma-sumb;
    return 0;
}